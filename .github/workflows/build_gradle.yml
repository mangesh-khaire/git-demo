name: Build Gradle Project

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: self-hosted  # Specifies that this job should run on a self-hosted runner (Windows or Linux, depending on your setup)
    
    env:
      EXTERNAL_LIB_PATH: "D:/work_dsi/PNG/Platform Team/enovia-jar/enovia-24x-jar"

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Set library path
        run: echo "EXTERNAL_LIB_PATH=D:/work_dsi/PNG/Platform Team/enovia-jar/enovia-24x-jar"
 
      - name: Print environment variable
        run: echo "EXTERNAL_LIB_PATH=$EXTERNAL_LIB_PATH"
        
      # Step 2: Set up JDK (if required, specify the Java version needed for your Gradle project)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Specify JDK distribution (temurin, zulu, adopt, etc.)
          java-version: '17'       # Change this to the Java version your project requires

      - name: Print extJarPath
        working-directory: demo
        run: |
          .\gradlew printExtJarPath

      # Step 3: Navigate to the 'demo' folder and build the Gradle project
      - name: Build Gradle project
        working-directory: demo
        run: |
            .\gradlew.bat build --info  # Use './gradlew build' if on Linux or MacOS

      # Step 4: Copy the build output to a specific directory
      - name: Copy build output to specific location
        run: |
          mkdir D:\build-output  # Create a directory for storing the build output
          xcopy /s /e demo\build D:\build-output  # Copy the entire build directory to the new location
